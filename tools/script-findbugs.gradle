apply plugin: 'findbugs'

def reportsDir = "${project.buildDir}/reports"
check.dependsOn 'findbugs'
task findbugs(type: FindBugs, group: 'Verification', dependsOn: "assembleDebug") {
    ignoreFailures = false
    effort = "max"
    reportLevel = "high"
    excludeFilter = new File("$project.rootDir/tools/rules-findbugs.xml")
    classes = files("${buildDir}/intermediates/classes")
    source 'src/main/java'
    include '**/*.java'
    exclude '**/gen/**'

    // if it should ignore issues or fail the build when issues are found
    ignoreFailures = true
    // the precision with which it will find bugs. More effort = more time and memory.
    effort = "max"
    // what type of bugs should it report - medium tells us only to report medium and highlevel bugs.
    reportLevel = "medium"

    reports {
        xml.enabled = false
        html.enabled = true
        xml {
            setDestination(new File("$reportsDir/findbugs/findbugs.xml"))
//            destination "$reportsDir/findbugs/findbugs.xml"
        }
        html {
            setDestination(new File("$reportsDir/findbugs/findbugs.html"))
//            destination "$reportsDir/findbugs/findbugs.html"
        }
    }
    classpath = files()
}