apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

apply plugin: 'jacoco-android'
apply plugin: 'com.uber.infer.android'
apply plugin: "org.jmailen.kotlinter"
apply plugin: "net.ltgt.errorprone"

//apply from: "$project.rootDir/tools/script-git-version.gradle"
apply from: "$project.rootDir/tools/script-check-style.gradle"
apply from: "$project.rootDir/tools/script-findbugs.gradle"
apply from: "$project.rootDir/tools/script-lint.gradle"
apply from: "$project.rootDir/tools/script-pmd.gradle"
apply from: "$project.rootDir/tools/script-java-code-coverage.gradle"
apply from: "$project.rootDir/tools/script-java-doc.gradle"
apply from: "$project.rootDir/tools/script-pitest.gradle"
apply from: "$project.rootDir/tools/script-infer.gradle"
apply from: "$project.rootDir/tools/script-detekt.gradle"
apply from: "$project.rootDir/tools/script-dokka.gradle"

android {
    compileSdkVersion Versions.compile_sdk
    buildToolsVersion Versions.buildTool

    defaultConfig {
        applicationId Versions.appId
        minSdkVersion Versions.min_sdk
        targetSdkVersion Versions.target_sdk
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            keyAlias 'androiddebugkey'
            keyPassword KEY_PASSWORD
            storePassword KEYSTORE_PASSWORD
            storeFile file('../keystore/debug.keystore')
        }
        release {
            keyAlias 'androiddebugkey'
            keyPassword KEY_PASSWORD
            storePassword KEYSTORE_PASSWORD
            storeFile file('../keystore/release.keystore')
        }
    }

    flavorDimensions "dev", "prod"

    productFlavors {
        dev {
            signingConfig signingConfigs.debug
//            versionCode gitVersionCodeTime
            versionCode 1
//            versionName gitVersionName
            versionName "1.0.0"
            applicationId "com.dd.template.dev"
            dimension "dev"
        }

        prod {
            signingConfig signingConfigs.release
            //            versionCode gitVersionCodeTime
            versionCode 1
//            versionName gitVersionName
            versionName "1.0.0"
            applicationId "com.dd.template"
            dimension "prod"
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), "$project.rootDir/tools/rules-proguard.pro"
            signingConfig signingConfigs.release
        }

        debug {
            minifyEnabled true
            testCoverageEnabled = true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), "$project.rootDir/tools/rules-proguard-debug.pro"
            signingConfig signingConfigs.debug
        }
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.1'
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'  // butterknife
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/rxjava.properties'
    }

    sourceSets {
        main {
            assets.srcDirs = ['src/main/assets', 'src/androidTest/java/com/zeyad/usecases/app/assets/']
        }
    }

    jacocoAndroidUnitTestReport {
        excludes += ['**/AutoValue_*.*', '**/*JavascriptBridge.class']
        csv.enabled false
        html.enabled true
        xml.enabled false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

//    configurations.all{
//        resolutionStrategy {
//            eachDependency { DependencyResolveDetails details ->
//                if (details.required.group == 'com.android.support') {
//                    details.useVersion(supportLibrary)
//                }
//            }
//        }
//    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation Deps.kotlin

    implementation Deps.design_support
    implementation Deps.appcompat_v7
    implementation Deps.support_v4
    implementation Deps.recycler_view
    implementation Deps.card_view
    implementation Deps.palette
    implementation Deps.constraint_layout

    implementation Deps.rx_android
    implementation Deps.rx_java
    //    def withoutRx = { exclude group: "io.reactivex.rxjava2" }
    implementation Deps.rx_binding_core
    implementation Deps.rx_binding_app_compat
    implementation Deps.rx_binding_design
    implementation Deps.rx_binding_recycler_view

    implementation Deps.rx_redux
    implementation "com.github.Zeyad-37:GenericRecyclerViewAdapter:1.8.0"
//    implementation 'com.github.pwittchen:reactivenetwork-rx2:0.12.2'
    implementation Deps.glide
    implementation Deps.lottie

    implementation Deps.rxlint
    debugImplementation Deps.leakCanary
    releaseImplementation Deps.leakCanary_no_op
    testImplementation Deps.leakCanary_no_op

    // Testing
    testImplementation Deps.junit
    testImplementation Deps.support_annotation
    testImplementation Deps.mockito
    testImplementation Deps.mockito_kotlin
    testImplementation Deps.robolectric
    testImplementation Deps.robolectric_shadow_support_v4

    testImplementation Deps.power_mock_junit
    testImplementation Deps.power_mock_junit_rule
    testImplementation Deps.power_mock_mockito
    testImplementation Deps.power_mock_class_loading_xstream

    testImplementation Deps.mock_web_server
    testImplementation Deps.rest_mock

    testImplementation(Deps.okHttp_ideling_resource) {
        exclude group: 'com.android.support' //required to resolve robolectric test problems
    }

    androidTestImplementation Deps.esspresso_core
    androidTestImplementation Deps.support_test_runner
    androidTestImplementation Deps.support_test_rules
    androidTestImplementation Deps.support_annotation
    androidTestImplementation Deps.junit
    androidTestImplementation Deps.mockito
    androidTestImplementation Deps.mockito_kotlin
    androidTestImplementation(Deps.okHttp_ideling_resource) {
        exclude group: 'com.android.support'
    }
    androidTestImplementation Deps.mock_web_server
    androidTestImplementation Deps.rest_mock
}
