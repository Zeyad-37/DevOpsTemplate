apply plugin: 'com.android.application'
//apply plugin: 'kotlin-android'
//apply plugin: 'kotlin-android-extensions'

apply plugin: 'jacoco-android'
apply plugin: 'com.uber.infer.android'
//apply plugin: "org.jmailen.kotlinter"
apply plugin: "net.ltgt.errorprone"

//apply from: "$project.rootDir/tools/script-git-version.gradle"
apply from: "$project.rootDir/tools/script-check-style.gradle"
apply from: "$project.rootDir/tools/script-findbugs.gradle"
apply from: "$project.rootDir/tools/script-lint.gradle"
apply from: "$project.rootDir/tools/script-pmd.gradle"
apply from: "$project.rootDir/tools/script-java-code-coverage.gradle"
apply from: "$project.rootDir/tools/script-java-doc.gradle"
apply from: "$project.rootDir/tools/script-pitest.gradle"
apply from: "$project.rootDir/tools/script-infer.gradle"
//apply from: "$project.rootDir/tools/script-detekt.gradle"

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"

    defaultConfig {
        applicationId appId
        minSdkVersion 18
        targetSdkVersion 26
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            keyAlias 'androiddebugkey'
            keyPassword KEY_PASSWORD
            storePassword KEYSTORE_PASSWORD
            storeFile file('../keystore/debug.keystore')
        }
        release {
            keyAlias 'androiddebugkey'
            keyPassword KEY_PASSWORD
            storePassword KEYSTORE_PASSWORD
            storeFile file('../keystore/release.keystore')
        }
    }

    flavorDimensions "dev", "prod"

    productFlavors {
        dev {
            signingConfig signingConfigs.debug
//            versionCode gitVersionCodeTime
            versionCode 1
//            versionName gitVersionName
            versionName "1.0.0"
            applicationId "com.dd.template.dev"
            dimension "dev"
        }

        prod {
            signingConfig signingConfigs.release
            //            versionCode gitVersionCodeTime
            versionCode 1
//            versionName gitVersionName
            versionName "1.0.0"
            applicationId "com.dd.template"
            dimension "prod"
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), "$project.rootDir/tools/rules-proguard.pro"
            signingConfig signingConfigs.release
        }

        debug {
            minifyEnabled true
            testCoverageEnabled = true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), "$project.rootDir/tools/rules-proguard-debug.pro"
            signingConfig signingConfigs.debug
        }
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.1'
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'  // butterknife
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/rxjava.properties'
    }

    sourceSets {
        main {
            assets.srcDirs = ['src/main/assets', 'src/androidTest/java/com/zeyad/usecases/app/assets/']
        }
    }

    jacocoAndroidUnitTestReport {
        excludes += ['**/AutoValue_*.*', '**/*JavascriptBridge.class']
        csv.enabled false
        html.enabled true
        xml.enabled false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

//    configurations.all{
//        resolutionStrategy {
//            eachDependency { DependencyResolveDetails details ->
//                if (details.required.group == 'com.android.support') {
//                    details.useVersion(supportLibrary)
//                }
//            }
//        }
//    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
//    implementation"org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    implementation "com.android.support:design:$supportLibrary"
    implementation "com.android.support:appcompat-v7:$supportLibrary"
    implementation "com.android.support:support-v4:$supportLibrary"
    implementation "com.android.support:recyclerview-v7:$supportLibrary"
    implementation "com.android.support:design:$supportLibrary"
    implementation "com.android.support:cardview-v7:$supportLibrary"
    implementation "com.android.support:palette-v7:$supportLibrary"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'

    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.7'
    //    def withoutRx = { exclude group: "io.reactivex.rxjava2" }
    implementation "com.jakewharton.rxbinding2:rxbinding:$rxbinding"//, withoutRx
    implementation "com.jakewharton.rxbinding2:rxbinding-appcompat-v7:$rxbinding"
    implementation "com.jakewharton.rxbinding2:rxbinding-design:$rxbinding"
    implementation "com.jakewharton.rxbinding2:rxbinding-recyclerview-v7:$rxbinding"

    implementation "com.github.Zeyad-37:RxRedux:$rxredux"
    implementation "com.github.Zeyad-37:GenericRecyclerViewAdapter:$genericRecyclerViewAdapter"
//    implementation 'com.github.pwittchen:reactivenetwork-rx2:0.12.2'
    implementation "com.github.bumptech.glide:glide:$glide"
    implementation "com.airbnb.android:lottie:$lottie"

    implementation "nl.littlerobots.rxlint:rxlint:$rxlint"
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanary"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanary"
    testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanary"

    // Testing
    testImplementation "junit:junit:$junit"
    testImplementation "com.android.support:support-annotations:$supportLibrary"
    testImplementation "org.mockito:mockito-core:$mockito"
    testImplementation "com.nhaarman:mockito-kotlin:$mockitoKotlin"
    testImplementation "org.robolectric:robolectric:$robolectric"
    testImplementation "org.robolectric:shadows-support-v4:3.3.2"

    testImplementation "org.powermock:powermock-module-junit4:$powerMock"
    testImplementation "org.powermock:powermock-module-junit4-rule:$powerMock"
    testImplementation "org.powermock:powermock-api-mockito:$powerMock"
    testImplementation "org.powermock:powermock-classloading-xstream:$powerMock"

    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttpVersion"
    testImplementation "com.github.andrzejchm.RESTMock:android:$restMock"

    testImplementation("com.jakewharton.espresso:okhttp3-idling-resource:$okhttpIdelingResource") {
        exclude group: 'com.android.support' //required to resolve robolectric test problems
    }
    androidTestImplementation "com.android.support.test:runner:$androidSupportTest"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoCore"

    androidTestImplementation "com.android.support.test:runner:$androidSupportTest"
    androidTestImplementation "com.android.support.test:rules:$androidSupportTest"
    androidTestImplementation "com.android.support:support-annotations:$supportLibrary"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoCore"
    androidTestImplementation "junit:junit:$junit"
    androidTestImplementation "org.mockito:mockito-core:$mockito"
    androidTestImplementation "com.nhaarman:mockito-kotlin:$mockitoKotlin"
    androidTestImplementation("com.jakewharton.espresso:okhttp3-idling-resource:$okhttpIdelingResource") {
        exclude group: 'com.android.support'
    }
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$okhttpVersion"
    androidTestImplementation "com.github.andrzejchm.RESTMock:android:$restMock"
}
