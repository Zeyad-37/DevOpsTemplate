project.ext {
    supportLibrary = '26.1.0'
    butterKnife = '8.7.0'
    rxbinding = '2.0.0'
    leakCanary = '1.5.1'
    androidSupportTest = '0.5'
    espressoCore = '2.2.2'
    archComp = '1.0.0'
    powerMock = '1.6.6'
    robolectric = '3.3.2'
    okhttpIdelingResource = '1.0.0'
    okhttpVersion = '3.8.0'
}

buildscript {
    ext.kotlin_version = '1.1.61'
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/" // error-prone
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.uber:infer-plugin:0.7.4"
        classpath "net.ltgt.gradle:gradle-errorprone-plugin:0.0.13"
        classpath 'pl.droidsonroids.gradle:gradle-pitest-plugin:0.1.4'
        classpath 'com.dicedmelon.gradle:jacoco-android:0.1.2'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url 'https://jitpack.io' }
    }

    tasks.withType(Test) {
        maxParallelForks = Runtime.runtime.availableProcessors()
    }
}


task clean(type: Delete) {
    delete rootProject.buildDir
}

//inferPlugin {
//    infer {
//        include = project.files("<PATH_TO_INCLUDE>")
//        exclude = project.files("<PATH_TO_EXCLUDE>")
//    }
//    eradicate {
//        include = project.files("<PATH_TO_INCLUDE>")
//        exclude = project.files("<PATH_TO_EXCLUDE>")
//    }
//}
